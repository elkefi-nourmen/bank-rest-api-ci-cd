name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up PostgreSQL container
        run: |
          docker run --name postgres-ci \
            -e POSTGRES_USER=${{ secrets.DB_USER }} \
            -e POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e POSTGRES_DB=${{ secrets.DB_NAME }} \
            -p 5432:5432 \
            -d postgres:14

      - name: Wait for PostgreSQL to be ready
        run: |
          until docker exec postgres-ci pg_isready -U ${{ secrets.DB_USER }}; do
            echo "Waiting for PostgreSQL..."
            sleep 5
          done

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run migrations
        run: |
          python manage.py migrate
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: localhost

      - name: Run tests
        run: |
          python -m pytest --disable-warnings
        env:
          DJANGO_SETTINGS_MODULE: bank_rest_api.settings
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}

      - name: Clean up Docker container
        if: always()
        run: docker stop postgres-ci && docker rm postgres-ci

      - name: Deploy application
        if: success()
        run: |
          run: echo "Placeholder for deployment"
